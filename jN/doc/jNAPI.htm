<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><meta content="text/html; charset=UTF-8" http-equiv="Content-Type"><title>jN - API</title><link href="jNAPI.css" type="text/css" rel="stylesheet"><meta content="text/html; charset=UTF-8" http-equiv="content-type"></head><body><h1>jN</h1><div><documentation>jN is a Notepad++ plugin. It helps you to script your favorite Text editor with your favorite programming language!</documentation></div><div id="id0x1973ecc0" class="type"><h2>IMenuItem</h2><div class="documentation"><documentation>Represents a menu item with command.</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr class="id0x19874260 id0x19874260"><td><span class="img propertyget"></span></td><td>checked</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether a check mark appears next to the text of the menu item.</documentation></td></tr><tr class="id0x1987d620 id0x1987d620"><td><span class="img propertyget"></span></td><td>disabled</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether the menu item can respond to user interaction.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>remove()</div></td><td><div class="empty"></div></td><td><documentation>Removes the menu item from it's parent.</documentation></td></tr><tr class="id0x19848f90 id0x19848f90"><td><span class="img propertyget"></span></td><td>text</td><td>VT_BSTR</td><td>Gets or Sets <documentation>Text of menu item</documentation></td></tr></tbody></table></div><div id="id0x198d7d60" class="type"><h2>IMenu</h2><div class="documentation"><documentation>Represents a submenu.</documentation></div><div class="implements"><b>Implements: </b><a href="#id0x1973ecc0">IMenuItem</a></div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr><td><span class="img func"></span></td><td><div>addItem(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div><a href="#id0x1973ecc0">IMenuItem</a></div></td><td><documentation>Appends a new menu item to the menu. Returns new menu item object. cfg = {text:'My Menu', cmd:function(){}}</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>addMenu(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_VARIANT</div><div><a href="#id0x198d7d60">IMenu</a></div></td><td><documentation>Appends a new menu and returns its. cfg = {text:'my menu', oninitpopup:function(){}}</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>addSeparator()</div></td><td><div class="empty"></div></td><td><documentation>Appends a separator to the menu.</documentation></td></tr></tbody></table></div><div id="id0x198d86c0" class="type"><h2>IDialog</h2><div class="documentation"><documentation>Represents a HTML based dialog window.</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr class="id0x19973ea0 id0x19973ea0"><td><span class="img propertyget"></span></td><td>clientHeight</td><td>VT_INT</td><td>Gets or Sets <documentation>Height of client area of dialog window.</documentation></td></tr><tr class="id0x19974760 id0x19974760"><td><span class="img propertyget"></span></td><td>clientWidth</td><td>VT_INT</td><td>Gets or Sets <documentation>Width of client area of dialog window.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>close()</div></td><td><div class="empty"></div></td><td><documentation>Hides and prepares the dialog window to be destroyed.</documentation></td></tr><tr class="id0x199896c0 id0x199896c0"><td><span class="img propertyget"></span></td><td>document</td><td>VT_DISPATCH</td><td>Gets <documentation>DOM Document that is the representation of client area of dialog window.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>foreground()</div></td><td><div class="empty"></div></td><td><documentation>Sets window into the foreground and activates it.</documentation></td></tr><tr class="id0x1998dc20 id0x1998dc20"><td><span class="img propertyget"></span></td><td>handle</td><td>VT_INT</td><td>Gets <documentation>Window handle of dialog.</documentation></td></tr><tr class="id0x198ed530 id0x198ed530"><td><span class="img propertyget"></span></td><td>height</td><td>VT_INT</td><td>Gets or Sets <documentation>Height of dialog window.</documentation></td></tr><tr class="id0x19975580 id0x19975580"><td><span class="img propertyget"></span></td><td>left</td><td>VT_INT</td><td>Gets or Sets <documentation>Distance, in pixels, between the left edge of the dialog window and the left edge of screen.</documentation></td></tr><tr class="id0x19988b30 id0x19988b30"><td><span class="img propertyget"></span></td><td>title</td><td>VT_BSTR</td><td>Gets or Sets <documentation>Title of the dialog window.</documentation></td></tr><tr class="id0x19974ea0 id0x19974ea0"><td><span class="img propertyget"></span></td><td>top</td><td>VT_INT</td><td>Gets or Sets <documentation>Distance, in pixels, between the top edge of the dialog window and the top edge of screen.</documentation></td></tr><tr class="id0x198d87b0 id0x198d87b0"><td><span class="img propertyget"></span></td><td>visible</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether the dialog is visible.</documentation></td></tr><tr class="id0x19973860 id0x19973860"><td><span class="img propertyget"></span></td><td>width</td><td>VT_INT</td><td>Gets or Sets <documentation>Width of dialog window.</documentation></td></tr></tbody></table></div><div id="id0x1998e2b0" class="type"><h2>ILibrary</h2><div class="documentation"><documentation>Collection of methods to make calls of exported functions of specified dynamic-link library.</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr><td><span class="img func"></span></td><td><div>alloc(</div><div class="input">number</div><div>)</div></td><td><div class="empty"></div><div>VT_UINT</div><div>VT_BSTR</div></td><td><documentation>Allocates specified number of bytes.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>call(</div><div class="input">functionName</div><div class="input">params</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_BSTR</div><div>VT_INT</div></td><td><documentation>Calls specified function.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>copy(</div><div class="input">dest</div><div class="input">destPos</div><div class="input">src</div><div class="input">srcPos</div><div class="input">size</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_UINT</div><div class="empty"></div></td><td><documentation>Copies bytes from src to dest beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>readBSTR(</div><div class="input">src</div><div class="input">pos</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_BSTR</div></td><td><documentation>Reads (4 Bytes) from value to src beginning at pos and interprets it as BSTR.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>readByte(</div><div class="input">src</div><div class="input">pos</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div></td><td><documentation>Reads BYTE from value to src beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>readDWord(</div><div class="input">src</div><div class="input">pos</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div></td><td><documentation>Reads DWORD from value to src beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>readInt64(</div><div class="input">src</div><div class="input">pos</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div></td><td><documentation>Reads INT64 from value to src beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>readWord(</div><div class="input">src</div><div class="input">pos</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div></td><td><documentation>Reads WORD from value to src beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>writeByte(</div><div class="input">dest</div><div class="input">pos</div><div class="input">value</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div><div class="empty"></div></td><td><documentation>Writes BYTE from value to dest beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>writeDWord(</div><div class="input">dest</div><div class="input">pos</div><div class="input">value</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div><div class="empty"></div></td><td><documentation>Writes DWORD from value to dest beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>writeInt64(</div><div class="input">dest</div><div class="input">pos</div><div class="input">value</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div><div class="empty"></div></td><td><documentation>Writes INT64 from value to dest beginning at pos.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>writeWord(</div><div class="input">dest</div><div class="input">pos</div><div class="input">value</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div>VT_UINT</div><div>VT_VARIANT</div><div class="empty"></div></td><td><documentation>Writes WORD from value to dest beginning at pos.</documentation></td></tr></tbody></table></div><div id="id0x19b10ae0" class="type"><h2>ICallBack</h2><div class="documentation"><documentation>Represents one of 12 possible callback functions</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr></tbody></table></div><div id="id0x19b10c70" class="type"><h2>ISystem</h2><div class="documentation"><documentation>Collection
 of system functions. Methods of this interface are globally available.
It means you can omit keyword 'System' to access to its methods.</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr><td><span class="img func"></span></td><td><div>addIdleHandler(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div class="empty"></div></td><td><documentation>Adds
 new idle handler. The cmd callback function of cfg will be called once
if the application has nothing to do. Be aware, what you do in a handle,
 it can lead to a deadlock.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>addScript(</div><div class="input">value</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div class="empty"></div></td><td><documentation>Runs
 the given javascript expression. Prefer this function to javascript's
eval. It allows you to get the script position in case of errors.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>addSystemHotKey(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div class="empty"></div></td><td><documentation>Adds
 new system wide hot key combination. cfg = {ctrl:true, shift:false,
alt:true, key:'a', cmd: function(){}}. The cfg.key property can be a
character or number. You find valid numbers (virtual-key codes) on <a href="http://goo.gl/XTFsh">MSDN</a></documentation></td></tr><tr class="id0x19dfc9f0 id0x19dfc9f0"><td><span class="img propertyget"></span></td><td>clipBoard</td><td>VT_BSTR</td><td>Gets or Sets <documentation>Text data on the Clipboard.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>createDialog(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div><a href="#id0x198d86c0">IDialog</a></div></td><td><documentation>Creates
 new dialog window described by cfg object. cfg =
{onbeforeclose:function(){return true; // or false for cancel },
onclose:function(){}}. See dialog.js for example.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>decodeFrom(</div><div class="input">codepage</div><div class="input">src</div><div>)</div></td><td><div class="empty"></div><div>VT_INT</div><div>VT_BSTR</div><div>VT_BSTR</div></td><td><documentation>Decodes source string encoded by codepage.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>encodeTo(</div><div class="input">codepage</div><div class="input">src</div><div>)</div></td><td><div class="empty"></div><div>VT_INT</div><div>VT_BSTR</div><div>VT_BSTR</div></td><td><documentation>Encodes source string by codepage.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>loadLibrary(</div><div class="input">libraryPath</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div><a href="#id0x1998e2b0">ILibrary</a></div></td><td><documentation>Loads given dll.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>registerCallBack(</div><div class="input">cfg</div><div class="input">stacksize</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div>VT_UINT</div><div><a href="#id0x19b10ae0">ICallBack</a></div></td><td><documentation>Registers
 cfg = {cmd:function(stackbuffer){}} as next callback function.It is
possible to register only 12 callback functions at the same time.</documentation></td></tr><tr class="id0x19e26860 id0x19e26860"><td><span class="img propertyget"></span></td><td>scriptFullName</td><td>VT_BSTR</td><td>Gets <documentation>Full path of start script file.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>setTimeout(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div class="empty"></div></td><td><documentation>Appends a new timer to the queue. cfg = {millis:1234, cmd:function(){}}</documentation></td></tr></tbody></table></div><div id="id0x19e26c70" class="type"><h2>IViewLine</h2><div class="documentation"><documentation>Represents line of View</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr class="id0x19f0fb80 id0x19f0fb80"><td><span class="img propertyget"></span></td><td>byteEnd</td><td>VT_INT</td><td>Gets <documentation>Byte position of line end including any line end characters. Faster than 'end' property.</documentation></td></tr><tr class="id0x19e27760 id0x19e27760"><td><span class="img propertyget"></span></td><td>byteStart</td><td>VT_INT</td><td>Gets <documentation>Byte position of line beginning. Faster than 'start' property.</documentation></td></tr><tr class="id0x19e27300 id0x19e27300"><td><span class="img propertyget"></span></td><td>end</td><td>VT_INT</td><td>Gets <documentation>Character position of line end in document</documentation></td></tr><tr class="id0x19e26db0 id0x19e26db0"><td><span class="img propertyget"></span></td><td>number</td><td>VT_INT</td><td>Gets <documentation>Line number</documentation></td></tr><tr class="id0x19e27120 id0x19e27120"><td><span class="img propertyget"></span></td><td>start</td><td>VT_INT</td><td>Gets <documentation>Character position of line beginning in document</documentation></td></tr><tr class="id0x19f0fdb0 id0x19f0fdb0"><td><span class="img propertyget"></span></td><td>text</td><td>VT_BSTR</td><td>Gets or Sets <documentation>Line text including any line end characters. The setting of line text changes the text selection.</documentation></td></tr></tbody></table></div><div id="id0x19f10300" class="type"><h2>IViewLines</h2><div class="documentation"><documentation>Represents lines of View</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr class="id0x19f408b0 id0x19f408b0"><td><span class="img propertyget"></span></td><td>count</td><td>VT_INT</td><td>Gets <documentation>The count of lines.</documentation></td></tr><tr class="id0x19f40a40 id0x19f40a40"><td><span class="img propertyget"></span></td><td>current</td><td>VT_INT</td><td>Gets or Sets <documentation>The current line of view.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>get(</div><div class="input">line</div><div>)</div></td><td><div class="empty"></div><div>VT_INT</div><div><a href="#id0x19e26c70">IViewLine</a></div></td><td><documentation>Returns the line object with specified number.</documentation></td></tr></tbody></table></div><div id="id0x19f40db0" class="type"><h2>IView</h2><div class="documentation"><documentation>Represents an editor view.</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr class="id0x1a1501c0 id0x1a1501c0"><td><span class="img propertyget"></span></td><td>anchor</td><td>VT_INT</td><td>Gets or Sets <documentation>Character position of anchor.</documentation></td></tr><tr class="id0x1a150490 id0x1a150490"><td><span class="img propertyget"></span></td><td>byteAnchor</td><td>VT_INT</td><td>Gets or Sets <documentation>Byte position of anchor.</documentation></td></tr><tr class="id0x1a14f950 id0x1a14f950"><td><span class="img propertyget"></span></td><td>bytePos</td><td>VT_INT</td><td>Gets or Sets <documentation>Byte position in document.</documentation></td></tr><tr class="id0x1a06dcc0 id0x1a06dcc0"><td><span class="img propertyget"></span></td><td>codepage</td><td>VT_INT</td><td>Gets or Sets <documentation>Code page of current file.</documentation></td></tr><tr class="id0x1a14fc70 id0x1a14fc70"><td><span class="img propertyget"></span></td><td>column</td><td>VT_INT</td><td>Gets <documentation>Column position.</documentation></td></tr><tr class="id0x19f413f0 id0x19f413f0"><td><span class="img propertyget"></span></td><td>file</td><td>VT_INT</td><td>Gets or Sets <documentation>Current file in the view.</documentation></td></tr><tr class="id0x19f411c0 id0x19f411c0"><td><span class="img propertyget"></span></td><td>files</td><td>VT_DISPATCH</td><td>Gets <documentation>Array of the file names opened in the view.</documentation></td></tr><tr class="id0x1a1577b0 id0x1a1577b0"><td><span class="img propertyget"></span></td><td>handle</td><td>VT_INT</td><td>Gets <documentation>Window handle of view.</documentation></td></tr><tr class="id0x1a06e440 id0x1a06e440"><td><span class="img propertyget"></span></td><td>lang</td><td>VT_INT</td><td>Gets or Sets <documentation>Language of the currently active document. It is an index in Editor.langs</documentation></td></tr><tr class="id0x1a0aee50 id0x1a0aee50"><td><span class="img propertyget"></span></td><td>line</td><td>VT_INT</td><td>Gets or Sets <documentation>The current line of view.</documentation></td></tr><tr class="id0x1a0af120 id0x1a0af120"><td><span class="img propertyget"></span></td><td>lines</td><td><a href="#id0x19f10300">IViewLines</a></td><td>Gets <documentation>Lines object of view.</documentation></td></tr><tr class="id0x1a156950 id0x1a156950"><td><span class="img propertyget"></span></td><td>navBarHidden</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether the navigation bar is visible.</documentation></td></tr><tr class="id0x1a0af620 id0x1a0af620"><td><span class="img propertyget"></span></td><td>pos</td><td>VT_INT</td><td>Gets or Sets <documentation>Character position in document.</documentation></td></tr><tr class="id0x19f41710 id0x19f41710"><td><span class="img propertyget"></span></td><td>selection</td><td>VT_BSTR</td><td>Gets or Sets <documentation>Selected text in the view.</documentation></td></tr><tr class="id0x19f40ea0 id0x19f40ea0"><td><span class="img propertyget"></span></td><td>text</td><td>VT_BSTR</td><td>Gets or Sets <documentation>The text of view.</documentation></td></tr></tbody></table></div><div id="id0x1a18db80" class="type"><h2>IEditor</h2><div class="documentation"><documentation>Represents
 the Notepad++. Methods of this interface are globally available. It
means you can omit keyword 'Editor' to access to its methods.</documentation></div><div class="implements"><b>Implements: </b>IDispatch</div><table><tbody><tr><th></th><th>Name</th><th>Type</th><th>Description</th></tr><tr><td><span class="img func"></span></td><td><div>addHotKey(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div class="empty"></div></td><td><documentation>Adds new application wide hot key combination. For cfg see addSystemHotKey method.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>addMenu(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_VARIANT</div><div><a href="#id0x198d7d60">IMenu</a></div></td><td><documentation>Appends new menu to the main window. Returns object representing the new menu. See IMenu.addMenu about cfg.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>alert(</div><div class="input">value</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div class="empty"></div></td><td><documentation>Displays a dialog box containing an application-defined message.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>createDockable(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div><a href="#id0x198d86c0">IDialog</a></div></td><td><documentation>Creates
 new dockable window described by cfg object. cfg = {name:'Tab name',
docking:'(top|bottom|left|right|floating)',
onbeforeclose:function(){return true; // false - hides the window, but
avoids its destroing }, onclose:function(){}}.</documentation></td></tr><tr class="id0x1a18de00 id0x1a18de00"><td><span class="img propertyget"></span></td><td>currentView</td><td><a href="#id0x19f40db0">IView</a></td><td>Gets <documentation>The view with currently active document.</documentation></td></tr><tr class="id0x1a18dc70 id0x1a18dc70"><td><span class="img propertyget"></span></td><td>firstView</td><td><a href="#id0x19f40db0">IView</a></td><td>Gets <documentation>The always visible view of editor. It is the left view.</documentation></td></tr><tr class="id0x1a1c1440 id0x1a1c1440"><td><span class="img propertyget"></span></td><td>handle</td><td>VT_INT</td><td>Gets <documentation>Window handle of Editor.</documentation></td></tr><tr class="id0x1a18e530 id0x1a18e530"><td><span class="img propertyget"></span></td><td>langs</td><td>VT_DISPATCH</td><td>Gets <documentation>Array of languages source code can be written in.</documentation></td></tr><tr class="id0x1a1bee50 id0x1a1bee50"><td><span class="img propertyget"></span></td><td>menuHidden</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether the main menu is hidden.</documentation></td></tr><tr class="id0x1a18fd10 id0x1a18fd10"><td><span class="img propertyget"></span></td><td>nppDir</td><td>VT_BSTR</td><td>Gets <documentation>Directory of Notepad++.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>open(</div><div class="input">filePath</div><div>)</div></td><td><div class="empty"></div><div>VT_BSTR</div><div class="empty"></div></td><td><documentation>Opens the file specified by the given file path.</documentation></td></tr><tr class="id0x1a18f8b0 id0x1a18f8b0"><td><span class="img propertyget"></span></td><td>pluginConfigDir</td><td>VT_BSTR</td><td>Gets <documentation>Plugin directory of Notepad++.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>runMenuCmd(</div><div class="input">cmd</div><div>)</div></td><td><div class="empty"></div><div>VT_INT</div><div class="empty"></div></td><td><documentation>Runs a specified build-in menu command of Notepad++.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>saveAll()</div></td><td><div class="empty"></div></td><td><documentation>Saves all the opened files.</documentation></td></tr><tr class="id0x1a18df90 id0x1a18df90"><td><span class="img propertyget"></span></td><td>secondView</td><td><a href="#id0x19f40db0">IView</a></td><td>Gets <documentation>The right view of editor.</documentation></td></tr><tr><td><span class="img func"></span></td><td><div>setListener(</div><div class="input">cfg</div><div>)</div></td><td><div class="empty"></div><div>VT_DISPATCH</div><div class="empty"></div></td><td><documentation>Sets new listener object with a lot of callback functions representing event handler. See start.js</documentation></td></tr><tr class="id0x1a1bf490 id0x1a1bf490"><td><span class="img propertyget"></span></td><td>statusBarHidden</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether the status bar is hidden.</documentation></td></tr><tr class="id0x1a1be860 id0x1a1be860"><td><span class="img propertyget"></span></td><td>tabBarHidden</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether the tab bar is hidden.</documentation></td></tr><tr class="id0x1a1beb30 id0x1a1beb30"><td><span class="img propertyget"></span></td><td>toolBarHidden</td><td>VT_BOOL</td><td>Gets or Sets <documentation>Value indicating whether the tool bar is hidden.</documentation></td></tr></tbody></table></div></body></html>